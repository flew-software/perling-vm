# This is a basic workflow to help you get started with Actions

name: Nighlty Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  schedule:
  - cron: "00 00 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install latest stable rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD

      - name: "Install MINGW"
        run: |
          sudo apt-get install mingw-w64

      # Runs a set of commands using the runners shell

      - name: "Build"
        run: |
          cargo build --release
          echo "done build linux!"
          cargo build --release --target=x86_64-pc-windows-gnu
          echo "done build windows!"
          echo "$(ls target/x86_64-pc-windows-gnu/release)"
          
      - name: Change Log Generate
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
        
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          release_name: Nightly Build ${{ steps.current-time.outputs.formattedTime }}
          body: ${{ steps.generate-release-changelog.outputs.changelog }}
          files: |
            LICENSE.txt
            target/release/perling_vm
            target/x86_64-pc-windows-gnu/release/perling_vm.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        

